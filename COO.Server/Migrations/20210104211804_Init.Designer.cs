// <auto-generated />
using COO.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace COO.Server.Migrations
{
    [DbContext(typeof(COODbContext))]
    [Migration("20210104211804_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("COO.Server.Data.Models.CharUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Affiliation")
                        .HasColumnType("text");

                    b.Property<string>("Appearance")
                        .HasColumnType("text");

                    b.Property<string>("Chat")
                        .HasColumnType("text");

                    b.Property<string>("Equips")
                        .HasColumnType("text");

                    b.Property<string>("Gameplay")
                        .HasColumnType("text");

                    b.Property<string>("Inv")
                        .HasColumnType("text");

                    b.Property<string>("KeyRemap")
                        .HasColumnType("text");

                    b.Property<string>("Keybinds")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Server")
                        .HasColumnType("text");

                    b.Property<string>("Skills")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Talents")
                        .HasColumnType("text");

                    b.Property<string>("XP")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CharUsers");
                });

            modelBuilder.Entity("COO.Server.Data.Models.DS_CreationRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Region")
                        .HasColumnType("text");

                    b.Property<string>("ServerType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DS_CreationRequests");
                });

            modelBuilder.Entity("COO.Server.Data.Models.DS_HostInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Hosts")
                        .HasColumnType("text");

                    b.Property<string>("IG")
                        .HasColumnType("text");

                    b.Property<int>("MNP")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PG")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .HasColumnType("text");

                    b.Property<string>("ServerType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DS_HostInfos");
                });

            modelBuilder.Entity("COO.Server.Data.Models.DS_LoginRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.HasKey("Id");

                    b.ToTable("DS_LoginRequests");
                });

            modelBuilder.Entity("COO.Server.Data.Models.LFG", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("GameType")
                        .HasColumnType("text");

                    b.Property<string>("HostRequest")
                        .HasColumnType("text");

                    b.Property<bool>("IsCanceled")
                        .HasColumnType("boolean");

                    b.Property<int>("MNP")
                        .HasColumnType("integer");

                    b.Property<string>("Members")
                        .HasColumnType("text");

                    b.Property<string>("Requester")
                        .HasColumnType("text");

                    b.Property<int>("TeamCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("LFGs");
                });

            modelBuilder.Entity("COO.Server.Data.Models.PlayUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Alert")
                        .HasColumnType("text");

                    b.Property<string>("CurrentChar")
                        .HasColumnType("text");

                    b.Property<string>("CurrentParty")
                        .HasColumnType("text");

                    b.Property<string>("GIReady")
                        .HasColumnType("text");

                    b.Property<string>("InstanceIP")
                        .HasColumnType("text");

                    b.Property<bool>("IsLogin")
                        .HasColumnType("boolean");

                    b.Property<string>("Leader")
                        .HasColumnType("text");

                    b.Property<string>("MainIP")
                        .HasColumnType("text");

                    b.Property<string>("PotentialGI")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.Property<string>("XServerMessages")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PlayUsers");
                });

            modelBuilder.Entity("COO.Server.Data.Models.SaveUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("BanTime")
                        .HasColumnType("integer");

                    b.Property<string>("BankInv")
                        .HasColumnType("text");

                    b.Property<string>("BlockedList")
                        .HasColumnType("text");

                    b.Property<int>("CharLimit")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FavServers")
                        .HasColumnType("text");

                    b.Property<string>("FriendList")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PrevDevice")
                        .HasColumnType("text");

                    b.Property<string>("PrevIP")
                        .HasColumnType("text");

                    b.Property<string>("PrevLogin")
                        .HasColumnType("text");

                    b.Property<string>("Privacy")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.Property<string>("Verification")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SaveUsers");
                });

            modelBuilder.Entity("COO.Server.Data.Models.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("CNP")
                        .HasColumnType("integer");

                    b.Property<string>("IG")
                        .HasColumnType("text");

                    b.Property<string>("IP")
                        .HasColumnType("text");

                    b.Property<bool>("IsInGame")
                        .HasColumnType("boolean");

                    b.Property<int>("MNP")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PG")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Port")
                        .HasColumnType("text");

                    b.Property<string>("Region")
                        .HasColumnType("text");

                    b.Property<string>("ServerType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Servers");
                });
#pragma warning restore 612, 618
        }
    }
}
